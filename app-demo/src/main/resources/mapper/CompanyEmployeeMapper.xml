<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yfst.demo.domain.mapper.CompanyEmployeeMapper">
  <resultMap id="BaseResultMap" type="com.yfst.demo.domain.entity.CompanyEmployee">
    <id column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="employee_phone" jdbcType="VARCHAR" property="employeePhone" />
    <result column="employee_status" jdbcType="INTEGER" property="employeeStatus" />
    <result column="total_recharge_amount" jdbcType="DOUBLE" property="totalRechargeAmount" />
    <result column="total_give_amount" jdbcType="DOUBLE" property="totalGiveAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_user_id" jdbcType="BIGINT" property="deleteUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employee_id, company_id, employee_name, employee_phone, employee_status, total_recharge_amount, 
    total_give_amount, create_time, create_user_id, update_time, update_user_id, delete_time, 
    delete_user_id
  </sql>
  <select id="selectByExample" parameterType="com.yfst.demo.domain.example.CompanyEmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from demo_company_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${limit} offset ${offset}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from demo_company_employee
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from demo_company_employee
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yfst.demo.domain.entity.CompanyEmployee">
    insert into demo_company_employee (employee_id, company_id, employee_name, 
      employee_phone, employee_status, total_recharge_amount, 
      total_give_amount, create_time, create_user_id, 
      update_time, update_user_id, delete_time, 
      delete_user_id)
    values (#{employeeId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeePhone,jdbcType=VARCHAR}, #{employeeStatus,jdbcType=INTEGER}, #{totalRechargeAmount,jdbcType=DOUBLE}, 
      #{totalGiveAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{deleteTime,jdbcType=TIMESTAMP}, 
      #{deleteUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yfst.demo.domain.entity.CompanyEmployee">
    insert into demo_company_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="employeePhone != null">
        employee_phone,
      </if>
      <if test="employeeStatus != null">
        employee_status,
      </if>
      <if test="totalRechargeAmount != null">
        total_recharge_amount,
      </if>
      <if test="totalGiveAmount != null">
        total_give_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUserId != null">
        delete_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeStatus != null">
        #{employeeStatus,jdbcType=INTEGER},
      </if>
      <if test="totalRechargeAmount != null">
        #{totalRechargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalGiveAmount != null">
        #{totalGiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUserId != null">
        #{deleteUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yfst.demo.domain.example.CompanyEmployeeExample" resultType="java.lang.Long">
    select count(*) from demo_company_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demo_company_employee
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeStatus != null">
        employee_status = #{record.employeeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.totalRechargeAmount != null">
        total_recharge_amount = #{record.totalRechargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.totalGiveAmount != null">
        total_give_amount = #{record.totalGiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteUserId != null">
        delete_user_id = #{record.deleteUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demo_company_employee
    set employee_id = #{record.employeeId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      employee_status = #{record.employeeStatus,jdbcType=INTEGER},
      total_recharge_amount = #{record.totalRechargeAmount,jdbcType=DOUBLE},
      total_give_amount = #{record.totalGiveAmount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      delete_user_id = #{record.deleteUserId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yfst.demo.domain.entity.CompanyEmployee">
    update demo_company_employee
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        employee_phone = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeStatus != null">
        employee_status = #{employeeStatus,jdbcType=INTEGER},
      </if>
      <if test="totalRechargeAmount != null">
        total_recharge_amount = #{totalRechargeAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalGiveAmount != null">
        total_give_amount = #{totalGiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUserId != null">
        delete_user_id = #{deleteUserId,jdbcType=BIGINT},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yfst.demo.domain.entity.CompanyEmployee">
    update demo_company_employee
    set company_id = #{companyId,jdbcType=BIGINT},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_status = #{employeeStatus,jdbcType=INTEGER},
      total_recharge_amount = #{totalRechargeAmount,jdbcType=DOUBLE},
      total_give_amount = #{totalGiveAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      delete_user_id = #{deleteUserId,jdbcType=BIGINT}
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </update>
</mapper>
